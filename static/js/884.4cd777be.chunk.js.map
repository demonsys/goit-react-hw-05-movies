{"version":3,"file":"static/js/884.4cd777be.chunk.js","mappings":"8PAQe,SAASA,IAAgB,IAAD,IAC/BC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAC5CC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4CE,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,MACAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,KAAKH,GAAmBI,MAAMC,QAAQC,IAChE,GAAE,CAACV,IACJ,IACEW,EAKER,EALFQ,MACAC,EAIET,EAJFS,aACAC,EAGEV,EAHFU,SAHF,EAMIV,EAFFW,OAAAA,OAJF,MAIW,GAJX,EAKEC,EACEZ,EADFY,YAEF,OACE,4BACE,SAAC,KAAD,CAAMC,GAAIpB,EAAaqB,QAAvB,kCACCd,IACC,UAAC,KAAD,WACGY,IACC,SAAC,KAAD,CAAQG,IAxBD,kCAwBmBH,EAAaI,IAAI,GAAGC,MAAM,SAEtD,wBAAKT,KACL,wCAAgBU,KAAKC,MAAqB,GAAfV,GAA3B,SACA,SAAC,KAAD,wBACA,uBAAIC,KACJ,SAAC,KAAD,sBACA,wBAAKC,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,WAG9C,kBAfF,0BAiBE,2BACE,yBACE,SAAC,KAAD,CAAeV,GAAG,OAAlB,qBAEF,yBACE,SAAC,KAAD,CAAeA,GAAG,UAAlB,2BAGJ,mBACA,SAAC,EAAAW,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,mICrDYC,EAASC,EAAAA,GAAAA,IAAH,gFAKNC,EAAYD,EAAAA,GAAAA,IAAH,6DAITE,EAAWF,EAAAA,GAAAA,EAAH,4C,+LCVfG,EAAW,gCACXC,EAAU,mCAKV5B,EAAe,mCAAG,WAAMN,GAAN,uFACCmC,EAAAA,EAAAA,IAAUF,EAAW,SAAWjC,EAAS,CAC9DoC,OAAQ,CACNC,QAASH,KAHS,cAChBI,EADgB,yBAMfA,EAASC,MANM,2CAAH,sDASfC,EAAW,mCAAG,oGACKL,EAAAA,EAAAA,IAAUF,EAAW,qBAAsB,CAChEG,OAAQ,CACNC,QAASH,KAHK,cACZI,EADY,yBAMXA,EAASC,KAAKE,SANH,2CAAH,qDASXC,EAAO,mCAAG,WAAMC,GAAN,uFACSR,EAAAA,EAAAA,IACrBF,EAAW,SAAWU,EAAW,WACjC,CACEP,OAAQ,CACNC,QAASH,KALD,cACRI,EADQ,yBASPA,EAASC,KAAKK,MATP,2CAAH,sDAYPC,EAAU,mCAAG,WAAMF,GAAN,uFACMR,EAAAA,EAAAA,IACrBF,EAAW,SAAWU,EAAW,WACjC,CACEP,OAAQ,CACNC,QAASH,KALE,cACXI,EADW,yBASVA,EAASC,KAAKE,SATJ,2CAAH,sDAYVK,EAAY,mCAAG,WAAMC,GAAN,uFACIZ,EAAAA,EAAAA,IAAUF,EAAW,eAAgB,CAC1DG,OAAQ,CACNC,QAASH,EACTa,MAAAA,KAJe,cACbT,EADa,yBAOZA,EAASC,KAAKE,SAPF,2CAAH,qD","sources":["pages/MovieDetails.jsx","pages/MovieDetails.styled.js","services/themoviedb-api.js"],"sourcesContent":["import { Outlet, useLocation, useParams, Link } from 'react-router-dom';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport { getMovieDetails } from '../services/themoviedb-api';\nimport { StyledNavLink } from '../components/SharedLayout/SharedLayout.styled';\nimport { Poster, MovieCard, SubTitle } from './MovieDetails.styled';\nconst IMAGES_URL = 'https://image.tmdb.org/t/p/w500';\n// Возможные размеры: \"w154\",\"w185\",\"w342\",\"w500\",\"w780\",\"original\"\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [movieInfoState, setMovieInfoState] = useState([]);\n  useEffect(() => {\n    getMovieDetails(movieId).then(setMovieInfoState).catch(console.log);\n  }, [movieId]);\n  const {\n    title,\n    vote_average,\n    overview,\n    genres = [],\n    poster_path,\n  } = movieInfoState;\n  return (\n    <div>\n      <Link to={backLinkHref.current}>&#129044; Go back</Link>\n      {movieInfoState && (\n        <MovieCard>\n          {poster_path && (\n            <Poster src={IMAGES_URL + poster_path} alt=\"\" width=\"200\" />\n          )}\n          <h3>{title}</h3>\n          <p>User Score: {Math.round(vote_average * 10)}% </p>\n          <SubTitle>Overview</SubTitle>\n          <p>{overview}</p>\n          <SubTitle>Genres</SubTitle>\n          <ul>{genres.map(genre => genre.name).join(' ')}</ul>\n        </MovieCard>\n      )}\n      <hr />\n      Additional information\n      <ul>\n        <li>\n          <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n        </li>\n        <li>\n          <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n        </li>\n      </ul>\n      <hr />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Poster = styled.img`\n  float: left;\n  padding: 10px 20px;\n  height: auto;\n`;\nexport const MovieCard = styled.div`\n  padding: 5px 0;\n  height: 320px;\n`;\nexport const SubTitle = styled.p`\n  font-weight: 700;\n`;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b40401eeb8ead0377250c446133586af';\n// const IMAGES_URL = 'https://image.tmdb.org/t/p';\n// const IMAGE_SIZE = '/w500';\n// Возможные размеры: \"w154\",\"w185\",\"w342\",\"w500\",\"w780\",\"original\"\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(BASE_URL + 'movie/' + movieId, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nconst getTrending = async () => {\n  const response = await axios.get(BASE_URL + 'trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nconst getCast = async movie_id => {\n  const response = await axios.get(\n    BASE_URL + 'movie/' + movie_id + '/credits',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data.cast;\n};\n\nconst getReviews = async movie_id => {\n  const response = await axios.get(\n    BASE_URL + 'movie/' + movie_id + '/reviews',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovies = async query => {\n  const response = await axios.get(BASE_URL + 'search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data.results;\n};\n\nexport { getMovieDetails, getTrending, getCast, getReviews, searchMovies };\n"],"names":["MovieDetails","location","useLocation","backLinkHref","useRef","state","from","movieId","useParams","useState","movieInfoState","setMovieInfoState","useEffect","getMovieDetails","then","catch","console","log","title","vote_average","overview","genres","poster_path","to","current","src","alt","width","Math","round","map","genre","name","join","Suspense","fallback","Poster","styled","MovieCard","SubTitle","BASE_URL","API_KEY","axios","params","api_key","response","data","getTrending","results","getCast","movie_id","cast","getReviews","searchMovies","query"],"sourceRoot":""}