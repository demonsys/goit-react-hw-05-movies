{"version":3,"file":"static/js/247.4d85aaa1.chunk.js","mappings":"0PAMMA,EAAiBC,EAAAA,GAAAA,GAAH,2OAcdC,EAAaD,EAAAA,GAAAA,GAAH,yDAKD,SAASE,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQN,GAASO,KAAKH,GAAcI,MAAMC,QAAQC,IACnD,GAAE,CAACV,KAEF,4BACE,kCACA,SAACJ,EAAD,UACGO,EAAUQ,KAAI,SAAAC,GAAM,OACnB,UAACd,EAAD,WACGc,EAAOC,cACN,gBACEC,IAnCG,kCAmCeF,EAAOC,aACzBE,IAAKH,EAAOI,KACZC,MAAM,QAGR,iBACEC,MAAO,CACLD,MAAO,OACPE,OAAQ,SAHZ,sBAMYP,EAAOI,SAGrB,uBAAIJ,EAAOI,QACX,uCAAeJ,EAAOQ,eAlBPR,EAAOI,KADL,QAyB5B,C,+LC3DKK,EAAW,gCACXC,EAAU,mCAKVC,EAAe,mCAAG,WAAMvB,GAAN,uFACCwB,EAAAA,EAAAA,IAAUH,EAAW,SAAWrB,EAAS,CAC9DyB,OAAQ,CACNC,QAASJ,KAHS,cAChBK,EADgB,yBAMfA,EAASC,MANM,2CAAH,sDASfC,EAAW,mCAAG,oGACKL,EAAAA,EAAAA,IAAUH,EAAW,qBAAsB,CAChEI,OAAQ,CACNC,QAASJ,KAHK,cACZK,EADY,yBAMXA,EAASC,KAAKE,SANH,2CAAH,qDASXxB,EAAO,mCAAG,WAAMyB,GAAN,uFACSP,EAAAA,EAAAA,IACrBH,EAAW,SAAWU,EAAW,WACjC,CACEN,OAAQ,CACNC,QAASJ,KALD,cACRK,EADQ,yBASPA,EAASC,KAAKI,MATP,2CAAH,sDAYPC,EAAU,mCAAG,WAAMF,GAAN,uFACMP,EAAAA,EAAAA,IACrBH,EAAW,SAAWU,EAAW,WACjC,CACEN,OAAQ,CACNC,QAASJ,KALE,cACXK,EADW,yBASVA,EAASC,KAAKE,SATJ,2CAAH,sDAYVI,EAAY,mCAAG,WAAMC,GAAN,uFACIX,EAAAA,EAAAA,IAAUH,EAAW,eAAgB,CAC1DI,OAAQ,CACNC,QAASJ,EACTa,MAAAA,KAJe,cACbR,EADa,yBAOZA,EAASC,KAAKE,SAPF,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/themoviedb-api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getCast } from '../../services/themoviedb-api';\nimport styled from 'styled-components';\nconst IMAGES_URL = 'https://image.tmdb.org/t/p/w500';\n// Возможные размеры: \"w154\",\"w185\",\"w342\",\"w500\",\"w780\",\"original\"\nconst StyledCardList = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: start;\n  text-align: center;\n  gap: 30px;\n  flex-wrap: wrap;\n  padding: 0;\n  // color: #212121;\n  // &.active {\n  //   color: orangered;\n  // }\n`;\n\nconst StyledCard = styled.li`\n  padding: 5px;\n  width: 90px;\n`;\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [castState, setCastState] = useState([]);\n  useEffect(() => {\n    getCast(movieId).then(setCastState).catch(console.log);\n  }, [movieId]);\n  return (\n    <div>\n      <p>Cast:</p>\n      <StyledCardList>\n        {castState.map(person => (\n          <StyledCard key={person.name}>\n            {person.profile_path ? (\n              <img\n                src={IMAGES_URL + person.profile_path}\n                alt={person.name}\n                width=\"80\"\n              />\n            ) : (\n              <div\n                style={{\n                  width: '90px',\n                  height: '120px',\n                }}\n              >\n                No photo {person.name}\n              </div>\n            )}\n            <p>{person.name}</p>\n            <p>Character: {person.character}</p>\n          </StyledCard>\n        ))}\n      </StyledCardList>\n    </div>\n  );\n}\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b40401eeb8ead0377250c446133586af';\n// const IMAGES_URL = 'https://image.tmdb.org/t/p';\n// const IMAGE_SIZE = '/w500';\n// Возможные размеры: \"w154\",\"w185\",\"w342\",\"w500\",\"w780\",\"original\"\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(BASE_URL + 'movie/' + movieId, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nconst getTrending = async () => {\n  const response = await axios.get(BASE_URL + 'trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nconst getCast = async movie_id => {\n  const response = await axios.get(\n    BASE_URL + 'movie/' + movie_id + '/credits',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data.cast;\n};\n\nconst getReviews = async movie_id => {\n  const response = await axios.get(\n    BASE_URL + 'movie/' + movie_id + '/reviews',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovies = async query => {\n  const response = await axios.get(BASE_URL + 'search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data.results;\n};\n\nexport { getMovieDetails, getTrending, getCast, getReviews, searchMovies };\n"],"names":["StyledCardList","styled","StyledCard","Cast","movieId","useParams","useState","castState","setCastState","useEffect","getCast","then","catch","console","log","map","person","profile_path","src","alt","name","width","style","height","character","BASE_URL","API_KEY","getMovieDetails","axios","params","api_key","response","data","getTrending","results","movie_id","cast","getReviews","searchMovies","query"],"sourceRoot":""}