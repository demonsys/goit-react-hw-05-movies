{"version":3,"file":"static/js/186.1d214724.chunk.js","mappings":"6OAKe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWN,GAASO,KAAKH,GAAiBI,MAAMC,QAAQC,IACzD,GAAE,CAACV,KAEF,iCACE,wBACGG,EAAaQ,KAAI,SAAAC,GAAM,OACtB,2BACE,SAAC,KAAD,UAAWA,EAAOC,SACjBD,EAAOE,UAFDF,EAAOG,GADM,MAOD,IAAxBZ,EAAaa,SAAgB,wDAGnC,C,mICtBYC,EAASC,EAAAA,GAAAA,IAAH,gFAKNC,EAAYD,EAAAA,GAAAA,IAAH,6DAITE,EAAWF,EAAAA,GAAAA,EAAH,4C,+LCVfG,EAAW,gCACXC,EAAU,mCAKVC,EAAe,mCAAG,WAAMvB,GAAN,uFACCwB,EAAAA,EAAAA,IAAUH,EAAW,SAAWrB,EAAS,CAC9DyB,OAAQ,CACNC,QAASJ,KAHS,cAChBK,EADgB,yBAMfA,EAASC,MANM,2CAAH,sDASfC,EAAW,mCAAG,oGACKL,EAAAA,EAAAA,IAAUH,EAAW,qBAAsB,CAChEI,OAAQ,CACNC,QAASJ,KAHK,cACZK,EADY,yBAMXA,EAASC,KAAKE,SANH,2CAAH,qDASXC,EAAO,mCAAG,WAAMC,GAAN,uFACSR,EAAAA,EAAAA,IACrBH,EAAW,SAAWW,EAAW,WACjC,CACEP,OAAQ,CACNC,QAASJ,KALD,cACRK,EADQ,yBASPA,EAASC,KAAKK,MATP,2CAAH,sDAYP3B,EAAU,mCAAG,WAAM0B,GAAN,uFACMR,EAAAA,EAAAA,IACrBH,EAAW,SAAWW,EAAW,WACjC,CACEP,OAAQ,CACNC,QAASJ,KALE,cACXK,EADW,yBASVA,EAASC,KAAKE,SATJ,2CAAH,sDAYVI,EAAY,mCAAG,WAAMC,GAAN,uFACIX,EAAAA,EAAAA,IAAUH,EAAW,eAAgB,CAC1DI,OAAQ,CACNC,QAASJ,EACTa,MAAAA,KAJe,cACbR,EADa,yBAOZA,EAASC,KAAKE,SAPF,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","pages/MovieDetails.styled.js","services/themoviedb-api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getReviews } from '../../services/themoviedb-api';\nimport { SubTitle } from '../../pages/MovieDetails.styled';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviewsState, setReviewsState] = useState([]);\n  useEffect(() => {\n    getReviews(movieId).then(setReviewsState).catch(console.log);\n  }, [movieId]);\n  return (\n    <>\n      <ul>\n        {reviewsState.map(review => (\n          <li key={review.id}>\n            <SubTitle>{review.author}</SubTitle>\n            {review.content}\n          </li>\n        ))}\n      </ul>\n      {reviewsState.length === 0 && <div>No reviews for this film</div>}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Poster = styled.img`\n  float: left;\n  padding: 10px 20px;\n  height: auto;\n`;\nexport const MovieCard = styled.div`\n  padding: 5px 0;\n  height: 320px;\n`;\nexport const SubTitle = styled.p`\n  font-weight: 700;\n`;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b40401eeb8ead0377250c446133586af';\n// const IMAGES_URL = 'https://image.tmdb.org/t/p';\n// const IMAGE_SIZE = '/w500';\n// Возможные размеры: \"w154\",\"w185\",\"w342\",\"w500\",\"w780\",\"original\"\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(BASE_URL + 'movie/' + movieId, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nconst getTrending = async () => {\n  const response = await axios.get(BASE_URL + 'trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nconst getCast = async movie_id => {\n  const response = await axios.get(\n    BASE_URL + 'movie/' + movie_id + '/credits',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data.cast;\n};\n\nconst getReviews = async movie_id => {\n  const response = await axios.get(\n    BASE_URL + 'movie/' + movie_id + '/reviews',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovies = async query => {\n  const response = await axios.get(BASE_URL + 'search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data.results;\n};\n\nexport { getMovieDetails, getTrending, getCast, getReviews, searchMovies };\n"],"names":["Reviews","movieId","useParams","useState","reviewsState","setReviewsState","useEffect","getReviews","then","catch","console","log","map","review","author","content","id","length","Poster","styled","MovieCard","SubTitle","BASE_URL","API_KEY","getMovieDetails","axios","params","api_key","response","data","getTrending","results","getCast","movie_id","cast","searchMovies","query"],"sourceRoot":""}